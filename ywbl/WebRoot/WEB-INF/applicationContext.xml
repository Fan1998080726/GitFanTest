<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />

	<context:component-scan base-package="com"></context:component-scan>
	
	<!--proxy-target-class="true"强制使用cglib代理   如果为false则spring会自动选择-->
<!-- 	<aop:aspectj-autoproxy  proxy-target-class="true"/> -->
	
	
<!-- 		     6.开启注解AOP (前提是引入aop命名空间和相关jar包)   -->
	    <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"></aop:aspectj-autoproxy>
<!-- 	    7.开启aop，对类代理强制使用cglib代理 -->

<!--  <aop:config proxy-target-class="true"></aop:config>  -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 队列中的最小等待数 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 队列中的最大等待数 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 最长等待时间，单位毫秒 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
		<!-- 最大活跃数 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="initialSize" value="${jdbc.initialSize}"></property>
	</bean>
	
	
	
	    	<!-- 配置dbcp数据源 -->
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc2.driverClassName}" />
		<property name="url" value="${jdbc2.url}" />
		<property name="username" value="${jdbc2.username}" />
		<property name="password" value="${jdbc2.password}" />
		<!-- 队列中的最小等待数 -->
		<property name="minIdle" value="${jdbc2.minIdle}"></property>
		<!-- 队列中的最大等待数 -->
		<property name="maxIdle" value="${jdbc2.maxIdle}"></property>
		<!-- 最长等待时间，单位毫秒 -->
		<property name="maxWait" value="${jdbc2.maxWait}"></property>
		<!-- 最大活跃数 -->
		<property name="maxActive" value="${jdbc2.maxActive}"></property>
		<property name="initialSize" value="${jdbc2.initialSize}"></property>
	</bean>
	
	
	
	
	    	<!-- 配置dbcp数据源 -->
	<bean id="dataSource3" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc3.driverClassName}" />
		<property name="url" value="${jdbc3.url}" />
		<property name="username" value="${jdbc3.username}" />
		<property name="password" value="${jdbc3.password}" />
		<!-- 队列中的最小等待数 -->
		<property name="minIdle" value="${jdbc3.minIdle}"></property>
		<!-- 队列中的最大等待数 -->
		<property name="maxIdle" value="${jdbc3.maxIdle}"></property>
		<!-- 最长等待时间，单位毫秒 -->
		<property name="maxWait" value="${jdbc3.maxWait}"></property>
		<!-- 最大活跃数 -->
		<property name="maxActive" value="${jdbc3.maxActive}"></property>
		<property name="initialSize" value="${jdbc3.initialSize}"></property>
	</bean>
	
	
	
	
	
	
	
	
	
	
	
	
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean" >
		<property name="configLocation">
			<value>/WEB-INF/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource" >
			<ref local="dataSource" />
		</property>
	</bean>

	<bean id="dao" class="com.sdkj.util.basic.dao.DaoImpl">
		<property name="sqlMapClient" >
			<ref local="sqlMapClient" />
		</property>
	</bean>
	

<bean class="com.sdkj.util.WaterMark">
		<property name="waterMarkPath" value="D:\\gcjg\\WebRoot\\images\\" />
	<!-- 	<property name="waterMarkPath" value="E:\\workspace\\gcjg\\WebRoot\\image\\" /> -->
	</bean>

		
	<bean id="sqlMapClient2" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean" >
		<property name="configLocation">
			<value>/WEB-INF/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource" >
			<ref local="dataSource2" />
		</property>
	</bean>
	
	
	
	
	
	
	
	
	
	
	<bean id="dao2" class="com.sdkj.util.basic.dao.DaoImpl">
		<property name="sqlMapClient" >
			<ref local="sqlMapClient2" />
		</property>
	</bean>













<bean class="com.sdkj.util.WaterMark">
		<property name="waterMarkPath" value="D:\\gcjg\\WebRoot\\images\\" />
	<!-- 	<property name="waterMarkPath" value="E:\\workspace\\gcjg\\WebRoot\\image\\" /> -->
	</bean>

		
	<bean id="sqlMapClient3" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean" >
		<property name="configLocation">
			<value>/WEB-INF/SqlMapConfig.xml</value>
		</property>
		<property name="dataSource" >
			<ref local="dataSource3" />
		</property>
	</bean>
	<bean id="dao3" class="com.sdkj.util.basic.dao.DaoImpl">
		<property name="sqlMapClient" >
			<ref local="sqlMapClient3" />
		</property>
	</bean>

	
	
		<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
		<bean id="transactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource2" />
	</bean>
	<bean id="transactionManager3" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource3" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:annotation-driven transaction-manager="transactionManager2"/>	
	<tx:annotation-driven transaction-manager="transactionManager3"/>	
	 
	 
	 
	 
	 
	 
	 
	 
	 	
	<!-- 定时器 -->
	<task:annotation-driven scheduler="scheduler" mode="proxy"/>
	<task:scheduler id="scheduler" pool-size="1"/>
	 
	 
	 
 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
</beans>